{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","selected","symbols","Jam","this","className","type","onClick","Object","keys","forEach","key","setState","map","name","updatedSymbols","Component","ReactDOM","render","document","getElementById"],"mappings":"kPAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,MACdC,UAAU,EACVC,QAAS,CACPC,IAAK,MALX,4CASE,WAAU,IAAD,OACP,EAA4CC,KAAKL,MAAzCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,SAAUC,EAAhC,EAAgCA,QAEhC,OACE,uBAAMG,UAAU,oBAAhB,UACGJ,EAEG,qBAAII,UAAU,sCAAd,oBACML,EADN,gBAIE,wBACE,UAAQ,cACRM,KAAK,SACLD,UAAU,cACVE,QAAS,WACPC,OAAOC,KAAKP,GAASQ,SAAQ,SAAAC,GAC3BT,EAAQS,GAAO,OAGjB,EAAKC,SAAS,CACZX,UAAU,EACVC,kBAMR,oBAAIG,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCAEGR,EAAMgB,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OAERT,UACGL,IAAiBc,GAA0B,MAAlBZ,EAAQY,GAC9B,+BAAiC,GALzC,UAQE,6BACE,wBACE,UACGd,IAAiBc,GAA0B,MAAlBZ,EAAQY,GAC9B,eAAiB,YAEvBR,KAAK,SACLD,UAAS,iBACNL,IAAiBc,GAA0B,MAAlBZ,EAAQY,GAC9B,UAAY,IAElBP,QAAS,WACP,IAAMQ,EAAc,eAAQb,GAExBF,IAAiBc,EACnBC,EAAeD,GAA0B,MAAlBZ,EAAQY,GAC3B,IAAM,KAEVC,EAAeD,GAAQ,IACvBC,EAAef,GAAgB,KAGjC,EAAKY,SAAS,CACZZ,aAAcc,EACdb,SAAmC,MAAzBc,EAAeD,GACzBZ,QAASa,KAxBf,SA4BGf,IAAiBc,EAAOZ,EAAQY,GAAQ,QAI7C,oBAAI,UAAQ,YAAYT,UAAU,eAAlC,SACGS,MAxCEA,iBA7CrB,GAAyBE,aCpBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dd9a0049.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n  selected: boolean,\n  symbols: { [key: string]: string };\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n    selected: true,\n    symbols: {\n      Jam: '-',\n    },\n  };\n\n  render() {\n    const { selectedGood, selected, symbols } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selected\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={() => {\n                  Object.keys(symbols).forEach(key => {\n                    symbols[key] = '+';\n                  });\n\n                  this.setState({\n                    selected: false,\n                    symbols,\n                  });\n                }}\n              />\n            </h1>\n          )\n          : <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n          <tbody>\n\n            {goods.map(name => (\n              <tr\n                data-cy=\"Good\"\n                key={name}\n                className={\n                  (selectedGood === name && symbols[name] === '-')\n                    ? 'has-background-success-light' : ''\n                }\n              >\n                <td>\n                  <button\n                    data-cy={\n                      (selectedGood === name && symbols[name] === '-')\n                        ? 'RemoveButton' : 'AddButton'\n                    }\n                    type=\"button\"\n                    className={`button ${\n                      (selectedGood === name && symbols[name] === '-')\n                        ? 'is-info' : ''\n                    }`}\n                    onClick={() => {\n                      const updatedSymbols = { ...symbols };\n\n                      if (selectedGood === name) {\n                        updatedSymbols[name] = symbols[name] === '-'\n                          ? '+' : '-';\n                      } else {\n                        updatedSymbols[name] = '-';\n                        updatedSymbols[selectedGood] = '+';\n                      }\n\n                      this.setState({\n                        selectedGood: name,\n                        selected: updatedSymbols[name] === '-',\n                        symbols: updatedSymbols,\n                      });\n                    }}\n                  >\n                    {selectedGood === name ? symbols[name] : '+'}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {name}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}