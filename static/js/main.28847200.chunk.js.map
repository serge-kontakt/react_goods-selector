{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearSelection","setState","controlSelection","name","this","className","length","type","onClick","map","isSelected","Component","ReactDOM","render","document","getElementById"],"mappings":"2OAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,eAAiB,WACf,EAAKC,SAAS,CACZF,aAAc,MAPpB,EAWEG,iBAAmB,SAACC,GAClB,IAAQJ,EAAiB,EAAKD,MAAtBC,aAER,EAAKE,SAAS,CACZF,aAAeA,IAAiBI,EAAQ,GAAKA,KAfnD,4CAmBE,WAAU,IAAD,OACCJ,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACGN,EAAaO,OAEV,qBAAID,UAAU,sCAAd,oBACMN,EADN,gBAGE,wBACE,UAAQ,cACRQ,KAAK,SACL,aAAW,QACXF,UAAU,cACVG,QAASJ,KAAKJ,oBAIlB,oBAAIK,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCAEGT,EAAMa,KAAI,SAAAN,GACT,IAAMO,EAAaX,IAAiBI,EAEpC,OACE,qBACE,UAAQ,OAERE,UAAWK,EAAa,+BAAiC,GAH3D,UAKE,6BACE,wBACE,UAASA,EAAa,eAAiB,YACvCH,KAAK,SACLF,UAAS,iBAAYK,EAAa,UAAY,IAC9CF,QAAS,kBAAM,EAAKN,iBAAiBC,IAJvC,SAMGO,EAAa,IAAM,QAIxB,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACGF,MAfEA,iBAjDvB,GAAyBQ,aClBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.28847200.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  clearSelection = () => {\n    this.setState({\n      selectedGood: '',\n    });\n  };\n\n  controlSelection = (name: string) => {\n    const { selectedGood } = this.state;\n\n    this.setState({\n      selectedGood: (selectedGood === name) ? '' : name,\n    });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood.length\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                aria-label=\"Clear\"\n                className=\"delete ml-3\"\n                onClick={this.clearSelection}\n              />\n            </h1>\n          )\n          : <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n          <tbody>\n\n            {goods.map(name => {\n              const isSelected = selectedGood === name;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={name}\n                  className={isSelected ? 'has-background-success-light' : ''}\n                >\n                  <td>\n                    <button\n                      data-cy={isSelected ? 'RemoveButton' : 'AddButton'}\n                      type=\"button\"\n                      className={`button ${isSelected ? 'is-info' : ''}`}\n                      onClick={() => this.controlSelection(name)}\n                    >\n                      {isSelected ? '-' : '+'}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {name}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}